<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from robot_description/robots/rbwatcher_std.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="summit_xl">
  <!-- ***************** -->
  <!-- Imported elements -->
  <!-- ***************** -->
  <!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->
  <gazebo reference="base_footprint">
    <material>Gazebo/Green</material>
  </gazebo>
  <!-- in kg-->
  <!-- source en.wikipedia.org/wiki/List_of_moments_of_inertia-->
  <!-- This file unifies all sensors that can be used on simulation, defined as xacro:macros -->
  <!-- <xacro:macro name="sensor_ultrasonic_a21_gazebo">
    <gazebo reference="${prefix}_link">
			<xacro:if value="${gpu}">
        <xacro:property name="ray_type" value="gpu_ray" />
        <xacro:property name="plugin_lib" value="libgazebo_ros_gpu_laser.so" />
      </xacro:if>
      <xacro:unless value="${gpu}">
        <xacro:property name="ray_type" value="ray" />
        <xacro:property name="plugin_lib" value="libgazebo_ros_laser.so" />
      </xacro:unless>
			<sensor type="${ray_type}" name="${prefix}_sensor">
				<pose>0 0 0 0 0 0</pose>
				<visualize>false</visualize>
				<update_rate>40</update_rate>
				<ray>
					<scan>
						<horizontal>
							<samples>1081</samples>
							<resolution>1</resolution>
							<min_angle>${min_angle}</min_angle>
							<max_angle>${max_angle}</max_angle>
						</horizontal>
					</scan>
					<range>
						<min>0.06</min>
						<max>20.0</max>
						<! resolution>0.004363323</resolution >
						<resolution>0.004359297</resolution>
						<! resolution>0.001</resolution >
					</range>
					<noise>
						<type>gaussian</type>
						<mean>0.0</mean>
						<stddev>0.01</stddev>
					</noise>
				</ray>
				<plugin name="${prefix}_controller" filename="${plugin_lib}">
					<topicName>${prefix_topic}/scan</topicName>
					<frameName>/${prefix}_link</frameName>
				</plugin>
			</sensor>
	</gazebo>
  </xacro:macro>
  -->
  <!-- Includes -->
  <!-- Includes -->
  <!-- *************** -->
  <!-- Robots Elements -->
  <!-- *************** -->
  <!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->
  <link name="robot_base_footprint">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>
  <joint name="robot_base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.1175"/>
    <!-- ${wheel_radius} property must be defined inside wheel description -->
    <parent link="robot_base_footprint"/>
    <child link="robot_base_link"/>
  </joint>
  <!-- BASE_LINK -->
  <link name="robot_base_link">
    <inertial>
      <mass value="50.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.391" ixy="0.004" ixz="0.0" iyy="6.853" iyz="0.0" izz="6.125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/bases/rbwatcher_body.dae"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0 " xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/bases/rbwatcher_body.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="robot_base_link">
    <material>Gazebo/Gray</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!-- DOCKING CONTACTS -->
  <joint name="robot_base_docking_joint" type="fixed">
    <origin rpy="0 0 0 " xyz="0.29378 0.0 0.07321"/>
    <parent link="robot_base_link"/>
    <child link="robot_base_docking_contact_link"/>
  </joint>
  <!-- DOCKING LINK -->
  <link name="robot_base_docking_contact_link"/>
  <!--WHEEL TIRE -->
  <joint name="robot_front_right_wheel_joint" type="continuous">
    <parent link="robot_base_link"/>
    <child link="robot_front_right_wheel"/>
    <origin rpy="0 0 0" xyz="0.22795 -0.155 0.0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="robot_front_right_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_right.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_right.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02052758333333333" ixy="0" ixz="0" iyy="0.027612499999999998" iyz="0" izz="0.02052758333333333"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="robot_front_right_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_front_right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_front_right_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>20</motorTorqueConstant>
    </actuator>
  </transmission>
  <gazebo reference="robot_front_right_wheel">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!--WHEEL TIRE -->
  <joint name="robot_front_left_wheel_joint" type="continuous">
    <parent link="robot_base_link"/>
    <child link="robot_front_left_wheel"/>
    <origin rpy="0 0 0" xyz="0.22795 0.155 0.0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="robot_front_left_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_left.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_left.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02052758333333333" ixy="0" ixz="0" iyy="0.027612499999999998" iyz="0" izz="0.02052758333333333"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="robot_front_left_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_front_left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_front_left_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>20</motorTorqueConstant>
    </actuator>
  </transmission>
  <gazebo reference="robot_front_left_wheel">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!--WHEEL TIRE -->
  <joint name="robot_back_left_wheel_joint" type="continuous">
    <parent link="robot_base_link"/>
    <child link="robot_back_left_wheel"/>
    <origin rpy="0 0 0" xyz="-0.22795 0.155 0.0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="robot_back_left_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_left.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_left.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02052758333333333" ixy="0" ixz="0" iyy="0.027612499999999998" iyz="0" izz="0.02052758333333333"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="robot_back_left_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_back_left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_back_left_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>20</motorTorqueConstant>
    </actuator>
  </transmission>
  <gazebo reference="robot_back_left_wheel">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!--WHEEL TIRE -->
  <joint name="robot_back_right_wheel_joint" type="continuous">
    <parent link="robot_base_link"/>
    <child link="robot_back_right_wheel"/>
    <origin rpy="0 0 0" xyz="-0.22795 -0.155 0.0"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="robot_back_right_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_right.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/rubber_wheel/rubber_wheel_v2_right.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02052758333333333" ixy="0" ixz="0" iyy="0.027612499999999998" iyz="0" izz="0.02052758333333333"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="robot_back_right_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_back_right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_back_right_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <motorTorqueConstant>20</motorTorqueConstant>
    </actuator>
  </transmission>
  <gazebo reference="robot_back_right_wheel">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="robot_top_structure_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="-0.17024 0 0.27609"/>
    <parent link="robot_base_link"/>
    <child link="robot_top_structure_link"/>
  </joint>
  <link name="robot_top_structure_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="alu_color">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
      <geometry>
        <mesh filename="package://robot_description/meshes/structures/rbwatcher/rbwatcher_top_structure.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/structures/rbwatcher/rbwatcher_top_structure.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="robot_top_structure_link">
    <material>Gazebo/Gray</material>
    <gravity>true</gravity>
  </gazebo>
  <joint name="robot_imu_joint" type="fixed">
    <axis xyz="1 0 0"/>
    <!--origin xyz="0 0 0.2825"/-->
    <origin rpy="0 0 0" xyz="-0.03534 0.132 0.16109"/>
    <parent link="robot_base_link"/>
    <child link="robot_imu_link"/>
  </joint>
  <link name="robot_imu_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0 0.01"/>
      <mass value="0.005"/>
      <inertia ixx="8.333333333333334e-10" ixy="0" ixz="0" iyy="8.333333333333334e-10" iyz="0" izz="8.333333333333334e-10"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <!--collision>
	        <origin rpy="0 0 0" xyz="0 0 0"/>
	        <geometry>
	          <box size="0.001 0.001 0.001"/>
	        </geometry>
	      </collision-->
  </link>
  <!--<gazebo>-->
  <!--<plugin name="${prefix}_controller" filename="libgazebo_ros_imu.so">-->
  <!--<topicName>${ns}imu/data</topicName>-->
  <!--<serviceName>imu/service</serviceName>-->
  <!--<bodyName>${prefix}_link</bodyName>-->
  <!--<updateRateHZ>50.0</updateRateHZ>-->
  <!--<gaussianNoise>0.0</gaussianNoise>-->
  <!--</plugin>-->
  <!--</gazebo>-->
  <gazebo reference="robot_imu_link">
    <gravity>true</gravity>
    <sensor name="robot_imu_imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="robot_imu_imu_plugin">
        <topicName>imu/data</topicName>
        <bodyName>robot_imu_link</bodyName>
        <updateRateHZ>100.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>robot_imu_link</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
  <joint name="robot_front_rgbd_camera_base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.29881 0.0 0.15243"/>
    <parent link="robot_base_link"/>
    <child link="robot_front_rgbd_camera_base_link"/>
  </joint>
  <link name="robot_front_rgbd_camera_base_link"/>
  <!-- camera body, with origin at bottom screw mount -->
  <joint name="robot_front_rgbd_camera_joint" type="fixed">
    <parent link="robot_front_rgbd_camera_base_link"/>
    <child link="robot_front_rgbd_camera_link"/>
    <origin rpy="0 0 0" xyz="0.01 0.02 0"/>
    <child link="robot_front_rgbd_camera_link"/>
  </joint>
  <link name="robot_front_rgbd_camera_link">
    <!-- camera link is aligned with the infrared sensor 1 that is "in the middle of the camera", not the one in the edge -->
    <visual>
      <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0.0149 -0.0175 0"/>
      <geometry>
        <!-- <box size="${d435_cam_width} ${d435_cam_height} ${d435_cam_depth}"/> -->
        <mesh filename="package://robotnik_sensors/meshes/intel_d435.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.0175 0"/>
      <geometry>
        <box size="0.02505 0.09 0.025"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.0025 -0.015 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="7.270833333333333e-05" ixy="0" ixz="0" iyy="1.041666666666667e-05" iyz="0" izz="7.270833333333333e-05"/>
    </inertial>
  </link>
  <!-- camera depth joints and links -->
  <joint name="robot_front_rgbd_camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="robot_front_rgbd_camera_link"/>
    <child link="robot_front_rgbd_camera_depth_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_depth_frame"/>
  <joint name="robot_front_rgbd_camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="robot_front_rgbd_camera_depth_frame"/>
    <child link="robot_front_rgbd_camera_depth_optical_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_depth_optical_frame"/>
  <!-- camera left IR joints and links -->
  <joint name="robot_front_rgbd_camera_infra1_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.0 0"/>
    <parent link="robot_front_rgbd_camera_link"/>
    <child link="robot_front_rgbd_camera_infra1_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_infra1_frame"/>
  <joint name="robot_front_rgbd_camera_infra1_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="robot_front_rgbd_camera_infra1_frame"/>
    <child link="robot_front_rgbd_camera_infra1_optical_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_infra1_optical_frame"/>
  <!-- camera right IR joints and links -->
  <joint name="robot_front_rgbd_camera_infra2_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.05 0"/>
    <parent link="robot_front_rgbd_camera_link"/>
    <child link="robot_front_rgbd_camera_infra2_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_infra2_frame"/>
  <joint name="robot_front_rgbd_camera_infra2_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="robot_front_rgbd_camera_infra2_frame"/>
    <child link="robot_front_rgbd_camera_infra2_optical_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_infra2_optical_frame"/>
  <!-- camera color joints and links -->
  <joint name="robot_front_rgbd_camera_color_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.015 0"/>
    <parent link="robot_front_rgbd_camera_link"/>
    <child link="robot_front_rgbd_camera_color_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_color_frame"/>
  <joint name="robot_front_rgbd_camera_color_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="robot_front_rgbd_camera_color_frame"/>
    <child link="robot_front_rgbd_camera_color_optical_frame"/>
  </joint>
  <link name="robot_front_rgbd_camera_color_optical_frame"/>
  <gazebo reference="robot_front_rgbd_camera_link">
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
    <gravity>1</gravity>
    <!--<mu>1</mu>-->
    <mu2>1</mu2>
    <fdir1>0 0 0</fdir1>
    <!--<slip1>0</slip1>
     <slip2>0</slip2>-->
    <kp>1e+13</kp>
    <kd>1</kd>
    <!--<max_vel>0.01</max_vel>
     <min_depth>0</min_depth>-->
    <sensor name="robotcolor" type="camera">
      <camera name="robot">
        <horizontal_fov>1.2112585008840648</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>RGB_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>7</update_rate>
      <visualize>0</visualize>
      <plugin filename="libgazebo_ros_camera.so" name="robot_front_rgbd_camerakortex_vision_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>7</updateRate>
        <cameraName>robot_color</cameraName>
        <imageTopicName>/robot/front_rgbd_camera/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/robot/front_rgbd_camera/color/camera_info</cameraInfoTopicName>
        <frameName>/robot_front_rgbd_camera_color_optical_frame</frameName>
        <!-- this is just which name the Image msg will have, it does not affect the simulation.
                However must be set to the optical_frame,  -->
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <ignoreTfPrefix>1</ignoreTfPrefix>
      </plugin>
    </sensor>
    <sensor name="robotired1" type="camera">
      <camera name="robot">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>7</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="robotired2" type="camera">
      <camera name="robot">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>7</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="robotdepth" type="depth">
      <camera name="robot">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.100</stddev>
        </noise>
      </camera>
      <always_on/>
      <update_rate>7</update_rate>
      <visualize>0</visualize>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="librealsense_gazebo_plugin.so" name="robot_controller">
      <prefix>robot</prefix>
      <depthUpdateRate>7</depthUpdateRate>
      <colorUpdateRate>7</colorUpdateRate>
      <infraredUpdateRate>7</infraredUpdateRate>
      <depthTopicName>/robot/front_rgbd_camera/depth/image_raw</depthTopicName>
      <depthCameraInfoTopicName>/robot/front_rgbd_camera/depth/camera_info</depthCameraInfoTopicName>
      <colorTopicName>/robot/front_rgbd_camera/color/image_raw</colorTopicName>
      <colorCameraInfoTopicName>/robot/front_rgbd_camera/color/camera_info</colorCameraInfoTopicName>
      <infrared1TopicName>/robot/front_rgbd_camera/infra1/image_raw</infrared1TopicName>
      <infrared1CameraInfoTopicName>/robot/front_rgbd_camera/infra1/camera_info</infrared1CameraInfoTopicName>
      <infrared2TopicName>/robot/front_rgbd_camera/infra2/image_raw</infrared2TopicName>
      <infrared2CameraInfoTopicName>/robot/front_rgbd_camera/infra2/camera_info</infrared2CameraInfoTopicName>
      <colorOpticalframeName>robot_front_rgbd_camera_color_optical_frame</colorOpticalframeName>
      <depthOpticalframeName>robot_front_rgbd_camera_depth_optical_frame</depthOpticalframeName>
      <infrared1OpticalframeName>robot_front_rgbd_camera_left_ir_optical_frame</infrared1OpticalframeName>
      <infrared2OpticalframeName>robot_front_rgbd_camera_right_ir_optical_frame</infrared2OpticalframeName>
      <rangeMinDepth>0.105</rangeMinDepth>
      <rangeMaxDepth>10.0</rangeMaxDepth>
      <pointCloud>true</pointCloud>
      <pointCloudTopicName>/robot/front_rgbd_camera/depth/points</pointCloudTopicName>
      <pointCloudCutoff>0.105</pointCloudCutoff>
    </plugin>
  </gazebo>
  <!--xacro:sensor_intel_d435 prefix="${prefix}rear_rgbd_camera" parent="${prefix}base_link" prefix_topic="rear_rgbd_camera">
		<origin xyz="-0.308 0.0 0.18308" rpy="0 ${-PI} 0"/>
    	</xacro:sensor_intel_d435-->
  <!-- ANTENNA GPS -->
  <joint name="robot_gps_base_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="-0.24824 0.095 0.76359"/>
    <parent link="robot_base_link"/>
    <child link="robot_gps_base_link"/>
  </joint>
  <link name="robot_gps_base_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0 0.015"/>
      <mass value="0.2"/>
      <inertia ixx="0.00012435" ixy="0" ixz="0" iyy="0.00012435" iyz="0" izz="0.00021870000000000003"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="ublox_gps_color">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/antenna_ANN_MB.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.01125"/>
      <geometry>
        <box size="0.0607 0.083 0.0225"/>
      </geometry>
    </collision>
  </link>
  <joint name="robot_gps_joint" type="fixed">
    <axis xyz="1 0 0"/>
    <origin xyz="0.0 0.0 0.01125"/>
    <parent link="robot_gps_base_link"/>
    <child link="robot_gps_link"/>
  </joint>
  <link name="robot_gps_link">
	  </link>
  <gazebo reference="robot_gps_base_link">
    <material>Gazebo/Grey</material>
    <gravity>true</gravity>
  </gazebo>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_gps.so" name="robot_gps_controller">
      <alwaysOn>1</alwaysOn>
      <updateRate>5</updateRate>
      <bodyName>robot_gps_link</bodyName>
      <frameId>robot_gps_link</frameId>
      <topicName>gps/fix</topicName>
      <!-- GPS coordinates -->
      <referenceLatitude>39.5080331</referenceLatitude>
      <referenceLongitude>-0.4619816</referenceLongitude>
      <!-- To set heading in ENU orientation (degrees) -->
      <referenceHeading>90</referenceHeading>
      <velocityTopicName>gps/fix_velocity</velocityTopicName>
      <drift>0.0 0.0 0.0</drift>
      <!--<drift>0.0001 0.0001 0.0001</drift>-->
      <!--<drift>0.3 0.3 0.3</drift>-->
      <gaussianNoise>0.00001 0.00001 0.00001</gaussianNoise>
      <!--<gaussianNoise>0.00001 0.00001 0.00001</gaussianNoise>-->
      <velocityDrift>0.00001 0.00001 0.00001</velocityDrift>
      <!--<velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>-->
      <velocityGaussianNoise>0.00001 0.00001 0.00001</velocityGaussianNoise>
    </plugin>
  </gazebo>
  <joint name="robot_top_3d_laser_base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.11924 0.0 0.38609"/>
    <parent link="robot_base_link"/>
    <child link="robot_top_3d_laser_base_link"/>
  </joint>
  <link name="robot_top_3d_laser_base_link">
    <visual>
      <!-- origin xyz="0 0 0" rpy="0 0 1.5708"/ -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/rs_helios_16p.stl"/>
      </geometry>
      <material name="black_alu">
        <color rgba="0.9 0.9 0.9 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.05"/>
      <geometry>
        <cylinder length="0.1" radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.0"/>
      <origin xyz="0 0 0.04135"/>
      <inertia ixx="0.0013104203" ixy="0" ixz="0" iyy="0.0013104203" iyz="0" izz="0.00166334"/>
    </inertial>
  </link>
  <joint name="robot_top_3d_laser_joint" type="fixed">
    <parent link="robot_top_3d_laser_base_link"/>
    <child link="robot_top_3d_laser_link"/>
    <origin rpy="0 0 0" xyz="0.0 0 0.0635"/>
  </joint>
  <link name="robot_top_3d_laser_link"/>
  <gazebo reference="robot_top_3d_laser_link">
    <sensor name="robot_top_3d_laser_sensor" type="ray">
      <pose>0 0 0 0 0 0.0</pose>
      <visualize>false</visualize>
      <update_rate>10.0</update_rate>
      <ray>
        <scan>
          <horizontal>
            <!-- for a high quality simulation -->
            <samples>1800.0</samples>
            <min_angle>-3.141592653589793</min_angle>
            <max_angle>3.141592653589793</max_angle>
          </horizontal>
          <vertical>
            <samples>15.0</samples>
            <min_angle>-0.2617993877991494</min_angle>
            <max_angle>0.2617993877991494</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.2</min>
          <max>150.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>none</type>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_laser.so" name="robot_top_3d_laser_controller">
        <topicName>top_3d_laser/points_raw</topicName>
        <frameName>/robot_top_3d_laser_link</frameName>
        <min_range>0.2</min_range>
        <max_range>150.0</max_range>
        <gaussianNoise>0.008</gaussianNoise>
      </plugin>
    </sensor>
  </gazebo>
  <!-- ANTENNA GPS -->
  <joint name="robot_antenna_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="-0.24124 0.0 0.31109"/>
    <parent link="robot_base_link"/>
    <child link="robot_antenna_base_link"/>
  </joint>
  <link name="robot_antenna_base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/others/antena_wifi_2J7A747Bc.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/others/antena_wifi_2J7A747Bc.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="robot_antenna_link">
    <material>Gazebo/Gray</material>
    <gravity>true</gravity>
  </gazebo>
  <joint name="robot_top_ptz_camera_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="-0.11808 0 0.55429"/>
    <parent link="robot_base_link"/>
    <child link="robot_top_ptz_camera_base_link"/>
  </joint>
  <link name="robot_top_ptz_camera_base_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.066 0 0"/>
      <mass value="0.8"/>
      <inertia ixx="0.0029766000000000007" ixy="0" ixz="0" iyy="0.0029766000000000007" iyz="0" izz="0.003630000000000001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="-0.07 -0.07 -0.045"/>
      <material name="grey_color">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/link_750_base.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="-0.07 -0.07 -0.045"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/link_750_base.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <joint name="robot_top_ptz_camera_pan_joint" type="revolute">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0318"/>
    <!-- check the displacement -->
    <parent link="robot_top_ptz_camera_base_link"/>
    <child link="robot_top_ptz_camera_pan_link"/>
    <limit effort="10.0" lower="-3.1416" upper="3.1416" velocity="1.0"/>
    <joint_properties damping="0.1" friction="{ptz_joint_friction}"/>
  </joint>
  <link name="robot_top_ptz_camera_pan_link">
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0002016666666666667" ixy="0" ixz="0" iyy="0.00018416666666666668" iyz="0" izz="0.00018416666666666668"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="grey_color">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/link_750_pan.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/link_750_pan.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </collision>
  </link>
  <transmission name="robot_top_ptz_camera_pan_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_top_ptz_camera_pan_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_top_ptz_camerapan_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
  </transmission>
  <joint name="robot_top_ptz_camera_tilt_joint" type="revolute">
    <axis xyz="0 0 1"/>
    <origin rpy="1.5707963267948966 0 0" xyz="0.0 0.0 0.102"/>
    <parent link="robot_top_ptz_camera_pan_link"/>
    <child link="robot_top_ptz_camera_tilt_link"/>
    <limit effort="10.0" lower="-1.5708" upper="1.5708" velocity="1.0"/>
    <joint_properties damping="0.1" friction="{ptz_joint_friction}"/>
  </joint>
  <link name="robot_top_ptz_camera_tilt_link">
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.00018416666666666668" ixy="0" ixz="0" iyy="0.00018416666666666668" iyz="0" izz="0.0002016666666666667"/>
    </inertial>
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <material name="grey_color">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/link_750_tilt.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0.0 0.0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/link_750_tilt.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </collision>
  </link>
  <transmission name="robot_top_ptz_camera_tilt_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_top_ptz_camera_tilt_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_top_ptz_cameratilt_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
  </transmission>
  <joint name="robot_top_ptz_camera_zoom_color_joint" type="prismatic">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
    <parent link="robot_top_ptz_camera_optical_frame_link"/>
    <child link="robot_top_ptz_camera_zoom_color_link"/>
    <limit effort="10000.0" lower="0" upper="10000" velocity="5"/>
  </joint>
  <link name="robot_top_ptz_camera_zoom_color_link">
    <inertial>
      <mass value="0.00001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1.841666666666667e-08" ixy="0" ixz="0" iyy="1.841666666666667e-08" iyz="0" izz="2.016666666666667e-08"/>
    </inertial>
  </link>
  <transmission name="robot_top_ptz_camera_zoom_color_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_top_ptz_camera_zoom_color_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_top_ptz_camerazoom_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <joint name="robot_top_ptz_camera_frame_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 0" xyz="0.05 0.025 0"/>
    <parent link="robot_top_ptz_camera_tilt_link"/>
    <child link="robot_top_ptz_camera_frame_link"/>
  </joint>
  <link name="robot_top_ptz_camera_frame_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.00018416666666666668" ixy="0" ixz="0" iyy="0.00018416666666666668" iyz="0" izz="0.0002016666666666667"/>
    </inertial>
  </link>
  <!-- Optical frame ${-M_PI/2} -->
  <joint name="robot_top_ptz_camera_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0.0 0 0"/>
    <parent link="robot_top_ptz_camera_frame_link"/>
    <child link="robot_top_ptz_camera_optical_frame_link"/>
  </joint>
  <link name="robot_top_ptz_camera_optical_frame_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.00018416666666666668" ixy="0" ixz="0" iyy="0.00018416666666666668" iyz="0" izz="0.0002016666666666667"/>
    </inertial>
  </link>
  <gazebo reference="robot_top_ptz_camera_base_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <joint name="robot_top_ptz_camera_thermal_frame_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 0" xyz="0.05 -0.025 0.0"/>
    <parent link="robot_top_ptz_camera_tilt_link"/>
    <child link="robot_top_ptz_camera_thermal_frame_link"/>
  </joint>
  <link name="robot_top_ptz_camera_thermal_frame_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.00018416666666666668" ixy="0" ixz="0" iyy="0.00018416666666666668" iyz="0" izz="0.0002016666666666667"/>
    </inertial>
  </link>
  <!-- Optical frame ${-M_PI/2} -->
  <joint name="robot_top_ptz_camera_optical_thermal_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0.0 0 0"/>
    <parent link="robot_top_ptz_camera_thermal_frame_link"/>
    <child link="robot_top_ptz_camera_optical_thermal_frame_link"/>
  </joint>
  <link name="robot_top_ptz_camera_optical_thermal_frame_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.00018416666666666668" ixy="0" ixz="0" iyy="0.00018416666666666668" iyz="0" izz="0.0002016666666666667"/>
    </inertial>
  </link>
  <joint name="robot_top_ptz_camera_zoom_thermal_joint" type="prismatic">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
    <parent link="robot_top_ptz_camera_optical_thermal_frame_link"/>
    <child link="robot_top_ptz_camera_zoom_thermal_link"/>
    <limit effort="10000.0" lower="0" upper="10000" velocity="5"/>
  </joint>
  <link name="robot_top_ptz_camera_zoom_thermal_link">
    <inertial>
      <mass value="0.00001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1.841666666666667e-08" ixy="0" ixz="0" iyy="1.841666666666667e-08" iyz="0" izz="2.016666666666667e-08"/>
    </inertial>
  </link>
  <transmission name="robot_top_ptz_camera_zoom_thermal_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_top_ptz_camera_zoom_thermal_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_top_ptz_camerazoom_thermal_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="robot_top_ptz_camera_base_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="robot_top_ptz_camera_frame_link">
    <!-- the image will be generated from this (${name}_frame) point of view, with the front being the X axis -->
    <sensor name="robot_top_ptz_camera_sensor" type="camera">
      <update_rate>15.0</update_rate>
      <camera name="top_ptz_camera">
        <horizontal_fov>1.0471975511965976</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="robot_top_ptz_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>top_ptz_camera</cameraName>
        <imageTopicName>color/image_raw</imageTopicName>
        <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
        <frameName>robot_top_ptz_camera_optical_frame_link</frameName>
        <!-- this is just which name the Image msg will have, it does not affect the simulation.
               However must be set to the optical_frame,  -->
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <ignoreTfPrefix>1</ignoreTfPrefix>
      </plugin>
    </sensor>
    <sensor name="thermal_robot_top_ptz_camera_sensor" type="camera">
      <update_rate>15.0</update_rate>
      <camera>
        <horizontal_fov>1.0471975511965976</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_thermal_camera.so" name="thermal_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>15.0</updateRate>
        <cameraName>top_ptz_camera</cameraName>
        <imageTopicName>thermal/image_raw</imageTopicName>
        <cameraInfoTopicName>thermal/camera_info</cameraInfoTopicName>
        <frameName>robot_top_ptz_camera_thermal_frame_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="ros_control">
      <robotParam>robot_description</robotParam>
      <controlPeriod>0.004</controlPeriod>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>
</robot>
