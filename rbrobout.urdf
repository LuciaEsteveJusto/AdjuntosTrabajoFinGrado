<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from robot_description/robots/rbrobout.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="rbrobout">
  <!-- ***************** -->
  <!-- Imported elements -->
  <!-- ***************** -->
  <!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->
  <gazebo reference="base_footprint">
    <material>Gazebo/Green</material>
  </gazebo>
  <!-- in kg-->
  <!-- source en.wikipedia.org/wiki/List_of_moments_of_inertia-->
  <!-- This file unifies all sensors that can be used on simulation, defined as xacro:macros -->
  <!-- <xacro:macro name="sensor_ultrasonic_a21_gazebo">
    <gazebo reference="${prefix}_link">
			<xacro:if value="${gpu}">
        <xacro:property name="ray_type" value="gpu_ray" />
        <xacro:property name="plugin_lib" value="libgazebo_ros_gpu_laser.so" />
      </xacro:if>
      <xacro:unless value="${gpu}">
        <xacro:property name="ray_type" value="ray" />
        <xacro:property name="plugin_lib" value="libgazebo_ros_laser.so" />
      </xacro:unless>
			<sensor type="${ray_type}" name="${prefix}_sensor">
				<pose>0 0 0 0 0 0</pose>
				<visualize>false</visualize>
				<update_rate>40</update_rate>
				<ray>
					<scan>
						<horizontal>
							<samples>1081</samples>
							<resolution>1</resolution>
							<min_angle>${min_angle}</min_angle>
							<max_angle>${max_angle}</max_angle>
						</horizontal>
					</scan>
					<range>
						<min>0.06</min>
						<max>20.0</max>
						<! resolution>0.004363323</resolution >
						<resolution>0.004359297</resolution>
						<! resolution>0.001</resolution >
					</range>
					<noise>
						<type>gaussian</type>
						<mean>0.0</mean>
						<stddev>0.01</stddev>
					</noise>
				</ray>
				<plugin name="${prefix}_controller" filename="${plugin_lib}">
					<topicName>${prefix_topic}/scan</topicName>
					<frameName>/${prefix}_link</frameName>
				</plugin>
			</sensor>
	</gazebo>
  </xacro:macro>
  -->
  <!-- Includes -->
  <!-- Includes -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="ros_control">
      <robotParam>robot_description</robotParam>
      <controlPeriod>0.001</controlPeriod>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>
  <!-- *************** -->
  <!-- Robots Elements -->
  <!-- *************** -->
  <!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->
  <link name="rbrobout_base_footprint">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>
  <joint name="rbrobout_base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.127"/>
    <!-- ${wheel_radius} property must be defined inside wheel description -->
    <parent link="rbrobout_base_footprint"/>
    <child link="rbrobout_base_link"/>
  </joint>
  <!-- BASE_LINK -->
  <link name="rbrobout_base_link">
    <inertial>
      <mass value="200.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.391" ixy="0.004" ixz="0.0" iyy="6.853" iyz="0.0" izz="6.125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/bases/robout_chassis.stl"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0 " xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/bases/robout_chassis.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- DOCKING CONTACTS -->
  <!-- <joint name="${prefix}base_docking_joint" type="fixed">
			<origin xyz="0.284 0.012 0.068" rpy="0 0 0 " />
			<parent link="${prefix}base_link"/>
			<child link="${prefix}base_docking_contact_link" />
		</joint> -->
  <!-- DOCKING LINK -->
  <!-- <link name="${prefix}base_docking_contact_link" /> -->
  <joint name="rbrobout_front_right_wheel_joint" type="continuous">
    <parent link="rbrobout_base_link"/>
    <child link="rbrobout_front_right_wheel_link"/>
    <origin rpy="1.57 0 0" xyz="0.558 -0.2865 0.0"/>
    <axis rpy="0 0 0" xyz="0 0 1"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="rbrobout_front_right_wheel_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/omni_wheel/robout_wheel.stl"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.128" radius="0.127"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="15"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.08096374999999999" ixy="0" ixz="0" iyy="0.1209675" iyz="0" izz="0.08096374999999999"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="rbrobout_front_right_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rbrobout_front_right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rbrobout_front_right_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="rbrobout_front_right_wheel_link">
    <mu1 value="0.0"/>
    <mu2 value="0.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="rbrobout_front_left_wheel_joint" type="continuous">
    <parent link="rbrobout_base_link"/>
    <child link="rbrobout_front_left_wheel_link"/>
    <origin rpy="1.57 0 0" xyz="0.558 0.2865 0.0"/>
    <axis rpy="0 0 0" xyz="0 0 1"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="rbrobout_front_left_wheel_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/omni_wheel/robout_wheel.stl"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.128" radius="0.127"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="15"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.08096374999999999" ixy="0" ixz="0" iyy="0.1209675" iyz="0" izz="0.08096374999999999"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="rbrobout_front_left_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rbrobout_front_left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rbrobout_front_left_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="rbrobout_front_left_wheel_link">
    <mu1 value="0.0"/>
    <mu2 value="0.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="rbrobout_back_left_wheel_joint" type="continuous">
    <parent link="rbrobout_base_link"/>
    <child link="rbrobout_back_left_wheel_link"/>
    <origin rpy="1.57 0 0" xyz="-0.558 0.2865 0.0"/>
    <axis rpy="0 0 0" xyz="0 0 1"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="rbrobout_back_left_wheel_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/omni_wheel/robout_wheel.stl"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.128" radius="0.127"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="15"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.08096374999999999" ixy="0" ixz="0" iyy="0.1209675" iyz="0" izz="0.08096374999999999"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="rbrobout_back_left_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rbrobout_back_left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rbrobout_back_left_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="rbrobout_back_left_wheel_link">
    <mu1 value="0.0"/>
    <mu2 value="0.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="rbrobout_back_right_wheel_joint" type="continuous">
    <parent link="rbrobout_base_link"/>
    <child link="rbrobout_back_right_wheel_link"/>
    <origin rpy="1.57 0 0" xyz="-0.558 -0.2865 0.0"/>
    <axis rpy="0 0 0" xyz="0 0 1"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <link name="rbrobout_back_right_wheel_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels/omni_wheel/robout_wheel.stl"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.128" radius="0.127"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="15"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.08096374999999999" ixy="0" ixz="0" iyy="0.1209675" iyz="0" izz="0.08096374999999999"/>
    </inertial>
  </link>
  <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
  <transmission name="rbrobout_back_right_wheel_joint_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rbrobout_back_right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rbrobout_back_right_wheel_joint_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="rbrobout_back_right_wheel_link">
    <mu1 value="0.0"/>
    <mu2 value="0.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="rbrobout_imu_joint" type="fixed">
    <axis xyz="1 0 0"/>
    <!--origin xyz="0 0 0.2825"/-->
    <origin rpy="0 0 0" xyz="0.242 -0.053 -0.028"/>
    <parent link="rbrobout_base_link"/>
    <child link="rbrobout_imu_link"/>
  </joint>
  <link name="rbrobout_imu_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0 0.01"/>
      <mass value="0.005"/>
      <inertia ixx="8.333333333333334e-10" ixy="0" ixz="0" iyy="8.333333333333334e-10" iyz="0" izz="8.333333333333334e-10"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <!--collision>
	        <origin rpy="0 0 0" xyz="0 0 0"/>
	        <geometry>
	          <box size="0.001 0.001 0.001"/>
	        </geometry>
	      </collision-->
  </link>
  <!--<gazebo>-->
  <!--<plugin name="${prefix}_controller" filename="libgazebo_ros_imu.so">-->
  <!--<topicName>${ns}imu/data</topicName>-->
  <!--<serviceName>imu/service</serviceName>-->
  <!--<bodyName>${prefix}_link</bodyName>-->
  <!--<updateRateHZ>50.0</updateRateHZ>-->
  <!--<gaussianNoise>0.0</gaussianNoise>-->
  <!--</plugin>-->
  <!--</gazebo>-->
  <gazebo reference="rbrobout_imu_link">
    <gravity>true</gravity>
    <sensor name="rbrobout_imu_imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="rbrobout_imu_imu_plugin">
        <topicName>imu/data</topicName>
        <bodyName>rbrobout_imu_link</bodyName>
        <updateRateHZ>100.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>rbrobout_imu_link</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
  <joint name="rbrobout_front_laser_base_joint" type="fixed">
    <origin rpy="0 0 0.7853981633974483" xyz="0.8 0.366 -0.06"/>
    <parent link="rbrobout_base_link"/>
    <child link="rbrobout_front_laser_base_link"/>
  </joint>
  <link name="rbrobout_front_laser_base_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.075"/>
      <geometry>
        <box size="0.106 0.094 0.152"/>
        <!--<cylinder radius="0.058" length="0.152"/>-->
        <!--<mesh filename="package://robotnik_sensors/meshes/sick_microscan3.dae"/>-->
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/sick_microscan3.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1.15"/>
      <origin rpy="0 0 0" xyz="0 0 0.075"/>
      <inertia ixx="0.0033370124999999996" ixy="0" ixz="0" iyy="0.003358383333333333" iyz="0" izz="0.0023828958333333332"/>
    </inertial>
  </link>
  <joint name="rbrobout_front_laser_joint" type="fixed">
    <parent link="rbrobout_front_laser_base_link"/>
    <child link="rbrobout_front_laser_link"/>
    <origin rpy="0 0 0" xyz="0.0 0 0.110"/>
  </joint>
  <link name="rbrobout_front_laser_link"/>
  <gazebo reference="rbrobout_front_laser_link">
    <sensor name="rbrobout_front_laser_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>12.5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>541</samples>
            <resolution>1</resolution>
            <min_angle>-2.2465</min_angle>
            <max_angle>2.2465</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.03</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.03</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="rbrobout_front_laser_controller">
        <topicName>front_laser/scan</topicName>
        <frameName>/rbrobout_front_laser_link</frameName>
        <!-- if not global (leading /) sets the current namespace as a prefix (/ns/name_laser_link) -->
      </plugin>
    </sensor>
  </gazebo>
  <joint name="rbrobout_rear_laser_base_joint" type="fixed">
    <origin rpy="0 0 -2.356194490192345" xyz="-0.8 -0.366 -0.06"/>
    <parent link="rbrobout_base_link"/>
    <child link="rbrobout_rear_laser_base_link"/>
  </joint>
  <link name="rbrobout_rear_laser_base_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.075"/>
      <geometry>
        <box size="0.106 0.094 0.152"/>
        <!--<cylinder radius="0.058" length="0.152"/>-->
        <!--<mesh filename="package://robotnik_sensors/meshes/sick_microscan3.dae"/>-->
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/sick_microscan3.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1.15"/>
      <origin rpy="0 0 0" xyz="0 0 0.075"/>
      <inertia ixx="0.0033370124999999996" ixy="0" ixz="0" iyy="0.003358383333333333" iyz="0" izz="0.0023828958333333332"/>
    </inertial>
  </link>
  <joint name="rbrobout_rear_laser_joint" type="fixed">
    <parent link="rbrobout_rear_laser_base_link"/>
    <child link="rbrobout_rear_laser_link"/>
    <origin rpy="0 0 0" xyz="0.0 0 0.110"/>
  </joint>
  <link name="rbrobout_rear_laser_link"/>
  <gazebo reference="rbrobout_rear_laser_link">
    <sensor name="rbrobout_rear_laser_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>12.5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>541</samples>
            <resolution>1</resolution>
            <min_angle>-2.2465</min_angle>
            <max_angle>2.2465</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.03</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.03</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="rbrobout_rear_laser_controller">
        <topicName>rear_laser/scan</topicName>
        <frameName>/rbrobout_rear_laser_link</frameName>
        <!-- if not global (leading /) sets the current namespace as a prefix (/ns/name_laser_link) -->
      </plugin>
    </sensor>
  </gazebo>
  <joint name="rbrobout_front_rgbd_camera_base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.835 0  0.1555"/>
    <parent link="rbrobout_base_link"/>
    <child link="rbrobout_front_rgbd_camera_base_link"/>
  </joint>
  <link name="rbrobout_front_rgbd_camera_base_link"/>
  <!-- camera body, with origin at bottom screw mount -->
  <joint name="rbrobout_front_rgbd_camera_joint" type="fixed">
    <parent link="rbrobout_front_rgbd_camera_base_link"/>
    <child link="rbrobout_front_rgbd_camera_link"/>
    <origin rpy="0 0 0" xyz="0.01 0.02 0"/>
    <child link="rbrobout_front_rgbd_camera_link"/>
  </joint>
  <link name="rbrobout_front_rgbd_camera_link">
    <!-- camera link is aligned with the infrared sensor 1 that is "in the middle of the camera", not the one in the edge -->
    <visual>
      <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0.0149 -0.0175 0"/>
      <geometry>
        <!-- <box size="${d435_cam_width} ${d435_cam_height} ${d435_cam_depth}"/> -->
        <mesh filename="package://robotnik_sensors/meshes/intel_d435.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.0175 0"/>
      <geometry>
        <box size="0.02505 0.09 0.025"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.0025 -0.015 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="7.270833333333333e-05" ixy="0" ixz="0" iyy="1.041666666666667e-05" iyz="0" izz="7.270833333333333e-05"/>
    </inertial>
  </link>
  <!-- camera depth joints and links -->
  <joint name="rbrobout_front_rgbd_camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="rbrobout_front_rgbd_camera_link"/>
    <child link="rbrobout_front_rgbd_camera_depth_frame"/>
  </joint>
  <link name="rbrobout_front_rgbd_camera_depth_frame"/>
  <joint name="rbrobout_front_rgbd_camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="rbrobout_front_rgbd_camera_depth_frame"/>
    <child link="rbrobout_front_rgbd_camera_depth_optical_frame"/>
  </joint>
  <link name="rbrobout_front_rgbd_camera_depth_optical_frame"/>
  <!-- camera left IR joints and links -->
  <joint name="rbrobout_front_rgbd_camera_infra1_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.0 0"/>
    <parent link="rbrobout_front_rgbd_camera_link"/>
    <child link="rbrobout_front_rgbd_camera_infra1_frame"/>
  </joint>
  <link name="rbrobout_front_rgbd_camera_infra1_frame"/>
  <joint name="rbrobout_front_rgbd_camera_infra1_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="rbrobout_front_rgbd_camera_infra1_frame"/>
    <child link="rbrobout_front_rgbd_camera_infra1_optical_frame"/>
  </joint>
  <link name="rbrobout_front_rgbd_camera_infra1_optical_frame"/>
  <!-- camera right IR joints and links -->
  <joint name="rbrobout_front_rgbd_camera_infra2_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.05 0"/>
    <parent link="rbrobout_front_rgbd_camera_link"/>
    <child link="rbrobout_front_rgbd_camera_infra2_frame"/>
  </joint>
  <link name="rbrobout_front_rgbd_camera_infra2_frame"/>
  <joint name="rbrobout_front_rgbd_camera_infra2_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="rbrobout_front_rgbd_camera_infra2_frame"/>
    <child link="rbrobout_front_rgbd_camera_infra2_optical_frame"/>
  </joint>
  <link name="rbrobout_front_rgbd_camera_infra2_optical_frame"/>
  <!-- camera color joints and links -->
  <joint name="rbrobout_front_rgbd_camera_color_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.015 0"/>
    <parent link="rbrobout_front_rgbd_camera_link"/>
    <child link="rbrobout_front_rgbd_camera_color_frame"/>
  </joint>
  <link name="rbrobout_front_rgbd_camera_color_frame"/>
  <joint name="rbrobout_front_rgbd_camera_color_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="rbrobout_front_rgbd_camera_color_frame"/>
    <child link="rbrobout_front_rgbd_camera_color_optical_frame"/>
  </joint>
  <link name="rbrobout_front_rgbd_camera_color_optical_frame"/>
  <gazebo reference="rbrobout_front_rgbd_camera_link">
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
    <gravity>1</gravity>
    <!--<mu>1</mu>-->
    <mu2>1</mu2>
    <fdir1>0 0 0</fdir1>
    <!--<slip1>0</slip1>
     <slip2>0</slip2>-->
    <kp>1e+13</kp>
    <kd>1</kd>
    <!--<max_vel>0.01</max_vel>
     <min_depth>0</min_depth>-->
    <sensor name="robotcolor" type="camera">
      <camera name="robot">
        <horizontal_fov>1.2112585008840648</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>RGB_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>7</update_rate>
      <visualize>0</visualize>
      <plugin filename="libgazebo_ros_camera.so" name="rbrobout_front_rgbd_camerakortex_vision_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>7</updateRate>
        <cameraName>robot_color</cameraName>
        <imageTopicName>/robot/front_rgbd_camera/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/robot/front_rgbd_camera/color/camera_info</cameraInfoTopicName>
        <frameName>/rbrobout_front_rgbd_camera_color_optical_frame</frameName>
        <!-- this is just which name the Image msg will have, it does not affect the simulation.
                However must be set to the optical_frame,  -->
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <ignoreTfPrefix>1</ignoreTfPrefix>
      </plugin>
    </sensor>
    <sensor name="robotired1" type="camera">
      <camera name="robot">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>7</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="robotired2" type="camera">
      <camera name="robot">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>7</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="robotdepth" type="depth">
      <camera name="robot">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.100</stddev>
        </noise>
      </camera>
      <always_on/>
      <update_rate>7</update_rate>
      <visualize>0</visualize>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="librealsense_gazebo_plugin.so" name="robot_controller">
      <prefix>robot</prefix>
      <depthUpdateRate>7</depthUpdateRate>
      <colorUpdateRate>7</colorUpdateRate>
      <infraredUpdateRate>7</infraredUpdateRate>
      <depthTopicName>/robot/front_rgbd_camera/depth/image_raw</depthTopicName>
      <depthCameraInfoTopicName>/robot/front_rgbd_camera/depth/camera_info</depthCameraInfoTopicName>
      <colorTopicName>/robot/front_rgbd_camera/color/image_raw</colorTopicName>
      <colorCameraInfoTopicName>/robot/front_rgbd_camera/color/camera_info</colorCameraInfoTopicName>
      <infrared1TopicName>/robot/front_rgbd_camera/infra1/image_raw</infrared1TopicName>
      <infrared1CameraInfoTopicName>/robot/front_rgbd_camera/infra1/camera_info</infrared1CameraInfoTopicName>
      <infrared2TopicName>/robot/front_rgbd_camera/infra2/image_raw</infrared2TopicName>
      <infrared2CameraInfoTopicName>/robot/front_rgbd_camera/infra2/camera_info</infrared2CameraInfoTopicName>
      <colorOpticalframeName>rbrobout_front_rgbd_camera_color_optical_frame</colorOpticalframeName>
      <depthOpticalframeName>rbrobout_front_rgbd_camera_depth_optical_frame</depthOpticalframeName>
      <infrared1OpticalframeName>rbrobout_front_rgbd_camera_left_ir_optical_frame</infrared1OpticalframeName>
      <infrared2OpticalframeName>rbrobout_front_rgbd_camera_right_ir_optical_frame</infrared2OpticalframeName>
      <rangeMinDepth>0.105</rangeMinDepth>
      <rangeMaxDepth>10.0</rangeMaxDepth>
      <pointCloud>true</pointCloud>
      <pointCloudTopicName>/robot/front_rgbd_camera/depth/points</pointCloudTopicName>
      <pointCloudCutoff>0.105</pointCloudCutoff>
    </plugin>
  </gazebo>
  <joint name="rbrobout_rear_rgbd_camera_base_joint" type="fixed">
    <origin rpy="0 3.141592653589793 0" xyz="-0.835 0  0.1555"/>
    <parent link="rbrobout_base_link"/>
    <child link="rbrobout_rear_rgbd_camera_base_link"/>
  </joint>
  <link name="rbrobout_rear_rgbd_camera_base_link"/>
  <!-- camera body, with origin at bottom screw mount -->
  <joint name="rbrobout_rear_rgbd_camera_joint" type="fixed">
    <parent link="rbrobout_rear_rgbd_camera_base_link"/>
    <child link="rbrobout_rear_rgbd_camera_link"/>
    <origin rpy="0 0 0" xyz="0.01 0.02 0"/>
    <child link="rbrobout_rear_rgbd_camera_link"/>
  </joint>
  <link name="rbrobout_rear_rgbd_camera_link">
    <!-- camera link is aligned with the infrared sensor 1 that is "in the middle of the camera", not the one in the edge -->
    <visual>
      <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0.0149 -0.0175 0"/>
      <geometry>
        <!-- <box size="${d435_cam_width} ${d435_cam_height} ${d435_cam_depth}"/> -->
        <mesh filename="package://robotnik_sensors/meshes/intel_d435.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.0175 0"/>
      <geometry>
        <box size="0.02505 0.09 0.025"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.0025 -0.015 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="7.270833333333333e-05" ixy="0" ixz="0" iyy="1.041666666666667e-05" iyz="0" izz="7.270833333333333e-05"/>
    </inertial>
  </link>
  <!-- camera depth joints and links -->
  <joint name="rbrobout_rear_rgbd_camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="rbrobout_rear_rgbd_camera_link"/>
    <child link="rbrobout_rear_rgbd_camera_depth_frame"/>
  </joint>
  <link name="rbrobout_rear_rgbd_camera_depth_frame"/>
  <joint name="rbrobout_rear_rgbd_camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="rbrobout_rear_rgbd_camera_depth_frame"/>
    <child link="rbrobout_rear_rgbd_camera_depth_optical_frame"/>
  </joint>
  <link name="rbrobout_rear_rgbd_camera_depth_optical_frame"/>
  <!-- camera left IR joints and links -->
  <joint name="rbrobout_rear_rgbd_camera_infra1_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.0 0"/>
    <parent link="rbrobout_rear_rgbd_camera_link"/>
    <child link="rbrobout_rear_rgbd_camera_infra1_frame"/>
  </joint>
  <link name="rbrobout_rear_rgbd_camera_infra1_frame"/>
  <joint name="rbrobout_rear_rgbd_camera_infra1_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="rbrobout_rear_rgbd_camera_infra1_frame"/>
    <child link="rbrobout_rear_rgbd_camera_infra1_optical_frame"/>
  </joint>
  <link name="rbrobout_rear_rgbd_camera_infra1_optical_frame"/>
  <!-- camera right IR joints and links -->
  <joint name="rbrobout_rear_rgbd_camera_infra2_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.05 0"/>
    <parent link="rbrobout_rear_rgbd_camera_link"/>
    <child link="rbrobout_rear_rgbd_camera_infra2_frame"/>
  </joint>
  <link name="rbrobout_rear_rgbd_camera_infra2_frame"/>
  <joint name="rbrobout_rear_rgbd_camera_infra2_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="rbrobout_rear_rgbd_camera_infra2_frame"/>
    <child link="rbrobout_rear_rgbd_camera_infra2_optical_frame"/>
  </joint>
  <link name="rbrobout_rear_rgbd_camera_infra2_optical_frame"/>
  <!-- camera color joints and links -->
  <joint name="rbrobout_rear_rgbd_camera_color_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.015 0"/>
    <parent link="rbrobout_rear_rgbd_camera_link"/>
    <child link="rbrobout_rear_rgbd_camera_color_frame"/>
  </joint>
  <link name="rbrobout_rear_rgbd_camera_color_frame"/>
  <joint name="rbrobout_rear_rgbd_camera_color_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="rbrobout_rear_rgbd_camera_color_frame"/>
    <child link="rbrobout_rear_rgbd_camera_color_optical_frame"/>
  </joint>
  <link name="rbrobout_rear_rgbd_camera_color_optical_frame"/>
  <gazebo reference="rbrobout_rear_rgbd_camera_link">
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
    <gravity>1</gravity>
    <!--<mu>1</mu>-->
    <mu2>1</mu2>
    <fdir1>0 0 0</fdir1>
    <!--<slip1>0</slip1>
     <slip2>0</slip2>-->
    <kp>1e+13</kp>
    <kd>1</kd>
    <!--<max_vel>0.01</max_vel>
     <min_depth>0</min_depth>-->
    <sensor name="robotcolor" type="camera">
      <camera name="robot">
        <horizontal_fov>1.2112585008840648</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>RGB_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>7</update_rate>
      <visualize>0</visualize>
      <plugin filename="libgazebo_ros_camera.so" name="rbrobout_rear_rgbd_camerakortex_vision_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>7</updateRate>
        <cameraName>robot_color</cameraName>
        <imageTopicName>/robot/rear_rgbd_camera/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/robot/rear_rgbd_camera/color/camera_info</cameraInfoTopicName>
        <frameName>/rbrobout_rear_rgbd_camera_color_optical_frame</frameName>
        <!-- this is just which name the Image msg will have, it does not affect the simulation.
                However must be set to the optical_frame,  -->
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <ignoreTfPrefix>1</ignoreTfPrefix>
      </plugin>
    </sensor>
    <sensor name="robotired1" type="camera">
      <camera name="robot">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>7</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="robotired2" type="camera">
      <camera name="robot">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>7</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="robotdepth" type="depth">
      <camera name="robot">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.100</stddev>
        </noise>
      </camera>
      <always_on/>
      <update_rate>7</update_rate>
      <visualize>0</visualize>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="librealsense_gazebo_plugin.so" name="robot_controller">
      <prefix>robot</prefix>
      <depthUpdateRate>7</depthUpdateRate>
      <colorUpdateRate>7</colorUpdateRate>
      <infraredUpdateRate>7</infraredUpdateRate>
      <depthTopicName>/robot/rear_rgbd_camera/depth/image_raw</depthTopicName>
      <depthCameraInfoTopicName>/robot/rear_rgbd_camera/depth/camera_info</depthCameraInfoTopicName>
      <colorTopicName>/robot/rear_rgbd_camera/color/image_raw</colorTopicName>
      <colorCameraInfoTopicName>/robot/rear_rgbd_camera/color/camera_info</colorCameraInfoTopicName>
      <infrared1TopicName>/robot/rear_rgbd_camera/infra1/image_raw</infrared1TopicName>
      <infrared1CameraInfoTopicName>/robot/rear_rgbd_camera/infra1/camera_info</infrared1CameraInfoTopicName>
      <infrared2TopicName>/robot/rear_rgbd_camera/infra2/image_raw</infrared2TopicName>
      <infrared2CameraInfoTopicName>/robot/rear_rgbd_camera/infra2/camera_info</infrared2CameraInfoTopicName>
      <colorOpticalframeName>rbrobout_rear_rgbd_camera_color_optical_frame</colorOpticalframeName>
      <depthOpticalframeName>rbrobout_rear_rgbd_camera_depth_optical_frame</depthOpticalframeName>
      <infrared1OpticalframeName>rbrobout_rear_rgbd_camera_left_ir_optical_frame</infrared1OpticalframeName>
      <infrared2OpticalframeName>rbrobout_rear_rgbd_camera_right_ir_optical_frame</infrared2OpticalframeName>
      <rangeMinDepth>0.105</rangeMinDepth>
      <rangeMaxDepth>10.0</rangeMaxDepth>
      <pointCloud>true</pointCloud>
      <pointCloudTopicName>/robot/rear_rgbd_camera/depth/points</pointCloudTopicName>
      <pointCloudCutoff>0.105</pointCloudCutoff>
    </plugin>
  </gazebo>
  <!-- magnetic sensors  -->
  <!--xacro:sick_mls prefix="$(arg prefix)left_mls" parent="$(arg prefix)base_link">
			<origin xyz="0.1085 -0.3045 -0.09137" rpy="0 0 ${1/2*PI}"/>
		</xacro:sick_mls>

		<xacro:sick_mls prefix="$(arg prefix)right_mls" parent="$(arg prefix)base_link">
			<origin xyz="-0.1085 0.3045 -0.09137" rpy="0 0 ${-1/2*PI}"/>
		</xacro:sick_mls>

		<xacro:sick_mls prefix="$(arg prefix)front_mls" parent="$(arg prefix)base_link">
			<origin xyz="0.7725 -0.1085 -0.09137" rpy="0 0 0"/>
		</xacro:sick_mls!-->
</robot>
